/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.oyo.search;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-03-20")
public class TPackagesListRequest implements org.apache.thrift.TBase<TPackagesListRequest, TPackagesListRequest._Fields>, java.io.Serializable, Cloneable, Comparable<TPackagesListRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TPackagesListRequest");

  private static final org.apache.thrift.protocol.TField LOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("location", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField START_MONTH_FIELD_DESC = new org.apache.thrift.protocol.TField("startMonth", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField END_MONTH_FIELD_DESC = new org.apache.thrift.protocol.TField("endMonth", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField MIN_NO_OF_GUESTS_FIELD_DESC = new org.apache.thrift.protocol.TField("minNoOfGuests", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField MAX_NO_OF_GUESTS_FIELD_DESC = new org.apache.thrift.protocol.TField("maxNoOfGuests", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TPackagesListRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TPackagesListRequestTupleSchemeFactory();

  private java.lang.String location; // required
  private month startMonth; // optional
  private month endMonth; // optional
  private int minNoOfGuests; // optional
  private int maxNoOfGuests; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    LOCATION((short)1, "location"),
    /**
     * 
     * @see month
     */
    START_MONTH((short)2, "startMonth"),
    /**
     * 
     * @see month
     */
    END_MONTH((short)3, "endMonth"),
    MIN_NO_OF_GUESTS((short)4, "minNoOfGuests"),
    MAX_NO_OF_GUESTS((short)5, "maxNoOfGuests");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // LOCATION
          return LOCATION;
        case 2: // START_MONTH
          return START_MONTH;
        case 3: // END_MONTH
          return END_MONTH;
        case 4: // MIN_NO_OF_GUESTS
          return MIN_NO_OF_GUESTS;
        case 5: // MAX_NO_OF_GUESTS
          return MAX_NO_OF_GUESTS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MINNOOFGUESTS_ISSET_ID = 0;
  private static final int __MAXNOOFGUESTS_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.START_MONTH,_Fields.END_MONTH,_Fields.MIN_NO_OF_GUESTS,_Fields.MAX_NO_OF_GUESTS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.LOCATION, new org.apache.thrift.meta_data.FieldMetaData("location", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_MONTH, new org.apache.thrift.meta_data.FieldMetaData("startMonth", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, month.class)));
    tmpMap.put(_Fields.END_MONTH, new org.apache.thrift.meta_data.FieldMetaData("endMonth", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, month.class)));
    tmpMap.put(_Fields.MIN_NO_OF_GUESTS, new org.apache.thrift.meta_data.FieldMetaData("minNoOfGuests", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MAX_NO_OF_GUESTS, new org.apache.thrift.meta_data.FieldMetaData("maxNoOfGuests", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TPackagesListRequest.class, metaDataMap);
  }

  public TPackagesListRequest() {
  }

  public TPackagesListRequest(
    java.lang.String location)
  {
    this();
    this.location = location;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TPackagesListRequest(TPackagesListRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetLocation()) {
      this.location = other.location;
    }
    if (other.isSetStartMonth()) {
      this.startMonth = other.startMonth;
    }
    if (other.isSetEndMonth()) {
      this.endMonth = other.endMonth;
    }
    this.minNoOfGuests = other.minNoOfGuests;
    this.maxNoOfGuests = other.maxNoOfGuests;
  }

  public TPackagesListRequest deepCopy() {
    return new TPackagesListRequest(this);
  }

  @Override
  public void clear() {
    this.location = null;
    this.startMonth = null;
    this.endMonth = null;
    setMinNoOfGuestsIsSet(false);
    this.minNoOfGuests = 0;
    setMaxNoOfGuestsIsSet(false);
    this.maxNoOfGuests = 0;
  }

  public java.lang.String getLocation() {
    return this.location;
  }

  public void setLocation(java.lang.String location) {
    this.location = location;
  }

  public void unsetLocation() {
    this.location = null;
  }

  /** Returns true if field location is set (has been assigned a value) and false otherwise */
  public boolean isSetLocation() {
    return this.location != null;
  }

  public void setLocationIsSet(boolean value) {
    if (!value) {
      this.location = null;
    }
  }

  /**
   * 
   * @see month
   */
  public month getStartMonth() {
    return this.startMonth;
  }

  /**
   * 
   * @see month
   */
  public void setStartMonth(month startMonth) {
    this.startMonth = startMonth;
  }

  public void unsetStartMonth() {
    this.startMonth = null;
  }

  /** Returns true if field startMonth is set (has been assigned a value) and false otherwise */
  public boolean isSetStartMonth() {
    return this.startMonth != null;
  }

  public void setStartMonthIsSet(boolean value) {
    if (!value) {
      this.startMonth = null;
    }
  }

  /**
   * 
   * @see month
   */
  public month getEndMonth() {
    return this.endMonth;
  }

  /**
   * 
   * @see month
   */
  public void setEndMonth(month endMonth) {
    this.endMonth = endMonth;
  }

  public void unsetEndMonth() {
    this.endMonth = null;
  }

  /** Returns true if field endMonth is set (has been assigned a value) and false otherwise */
  public boolean isSetEndMonth() {
    return this.endMonth != null;
  }

  public void setEndMonthIsSet(boolean value) {
    if (!value) {
      this.endMonth = null;
    }
  }

  public int getMinNoOfGuests() {
    return this.minNoOfGuests;
  }

  public void setMinNoOfGuests(int minNoOfGuests) {
    this.minNoOfGuests = minNoOfGuests;
    setMinNoOfGuestsIsSet(true);
  }

  public void unsetMinNoOfGuests() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MINNOOFGUESTS_ISSET_ID);
  }

  /** Returns true if field minNoOfGuests is set (has been assigned a value) and false otherwise */
  public boolean isSetMinNoOfGuests() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MINNOOFGUESTS_ISSET_ID);
  }

  public void setMinNoOfGuestsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MINNOOFGUESTS_ISSET_ID, value);
  }

  public int getMaxNoOfGuests() {
    return this.maxNoOfGuests;
  }

  public void setMaxNoOfGuests(int maxNoOfGuests) {
    this.maxNoOfGuests = maxNoOfGuests;
    setMaxNoOfGuestsIsSet(true);
  }

  public void unsetMaxNoOfGuests() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MAXNOOFGUESTS_ISSET_ID);
  }

  /** Returns true if field maxNoOfGuests is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxNoOfGuests() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MAXNOOFGUESTS_ISSET_ID);
  }

  public void setMaxNoOfGuestsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MAXNOOFGUESTS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case LOCATION:
      if (value == null) {
        unsetLocation();
      } else {
        setLocation((java.lang.String)value);
      }
      break;

    case START_MONTH:
      if (value == null) {
        unsetStartMonth();
      } else {
        setStartMonth((month)value);
      }
      break;

    case END_MONTH:
      if (value == null) {
        unsetEndMonth();
      } else {
        setEndMonth((month)value);
      }
      break;

    case MIN_NO_OF_GUESTS:
      if (value == null) {
        unsetMinNoOfGuests();
      } else {
        setMinNoOfGuests((java.lang.Integer)value);
      }
      break;

    case MAX_NO_OF_GUESTS:
      if (value == null) {
        unsetMaxNoOfGuests();
      } else {
        setMaxNoOfGuests((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case LOCATION:
      return getLocation();

    case START_MONTH:
      return getStartMonth();

    case END_MONTH:
      return getEndMonth();

    case MIN_NO_OF_GUESTS:
      return getMinNoOfGuests();

    case MAX_NO_OF_GUESTS:
      return getMaxNoOfGuests();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case LOCATION:
      return isSetLocation();
    case START_MONTH:
      return isSetStartMonth();
    case END_MONTH:
      return isSetEndMonth();
    case MIN_NO_OF_GUESTS:
      return isSetMinNoOfGuests();
    case MAX_NO_OF_GUESTS:
      return isSetMaxNoOfGuests();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TPackagesListRequest)
      return this.equals((TPackagesListRequest)that);
    return false;
  }

  public boolean equals(TPackagesListRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_location = true && this.isSetLocation();
    boolean that_present_location = true && that.isSetLocation();
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (!this.location.equals(that.location))
        return false;
    }

    boolean this_present_startMonth = true && this.isSetStartMonth();
    boolean that_present_startMonth = true && that.isSetStartMonth();
    if (this_present_startMonth || that_present_startMonth) {
      if (!(this_present_startMonth && that_present_startMonth))
        return false;
      if (!this.startMonth.equals(that.startMonth))
        return false;
    }

    boolean this_present_endMonth = true && this.isSetEndMonth();
    boolean that_present_endMonth = true && that.isSetEndMonth();
    if (this_present_endMonth || that_present_endMonth) {
      if (!(this_present_endMonth && that_present_endMonth))
        return false;
      if (!this.endMonth.equals(that.endMonth))
        return false;
    }

    boolean this_present_minNoOfGuests = true && this.isSetMinNoOfGuests();
    boolean that_present_minNoOfGuests = true && that.isSetMinNoOfGuests();
    if (this_present_minNoOfGuests || that_present_minNoOfGuests) {
      if (!(this_present_minNoOfGuests && that_present_minNoOfGuests))
        return false;
      if (this.minNoOfGuests != that.minNoOfGuests)
        return false;
    }

    boolean this_present_maxNoOfGuests = true && this.isSetMaxNoOfGuests();
    boolean that_present_maxNoOfGuests = true && that.isSetMaxNoOfGuests();
    if (this_present_maxNoOfGuests || that_present_maxNoOfGuests) {
      if (!(this_present_maxNoOfGuests && that_present_maxNoOfGuests))
        return false;
      if (this.maxNoOfGuests != that.maxNoOfGuests)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetLocation()) ? 131071 : 524287);
    if (isSetLocation())
      hashCode = hashCode * 8191 + location.hashCode();

    hashCode = hashCode * 8191 + ((isSetStartMonth()) ? 131071 : 524287);
    if (isSetStartMonth())
      hashCode = hashCode * 8191 + startMonth.getValue();

    hashCode = hashCode * 8191 + ((isSetEndMonth()) ? 131071 : 524287);
    if (isSetEndMonth())
      hashCode = hashCode * 8191 + endMonth.getValue();

    hashCode = hashCode * 8191 + ((isSetMinNoOfGuests()) ? 131071 : 524287);
    if (isSetMinNoOfGuests())
      hashCode = hashCode * 8191 + minNoOfGuests;

    hashCode = hashCode * 8191 + ((isSetMaxNoOfGuests()) ? 131071 : 524287);
    if (isSetMaxNoOfGuests())
      hashCode = hashCode * 8191 + maxNoOfGuests;

    return hashCode;
  }

  @Override
  public int compareTo(TPackagesListRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetLocation()).compareTo(other.isSetLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.location, other.location);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStartMonth()).compareTo(other.isSetStartMonth());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartMonth()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startMonth, other.startMonth);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndMonth()).compareTo(other.isSetEndMonth());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndMonth()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endMonth, other.endMonth);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMinNoOfGuests()).compareTo(other.isSetMinNoOfGuests());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMinNoOfGuests()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.minNoOfGuests, other.minNoOfGuests);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMaxNoOfGuests()).compareTo(other.isSetMaxNoOfGuests());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxNoOfGuests()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxNoOfGuests, other.maxNoOfGuests);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TPackagesListRequest(");
    boolean first = true;

    sb.append("location:");
    if (this.location == null) {
      sb.append("null");
    } else {
      sb.append(this.location);
    }
    first = false;
    if (isSetStartMonth()) {
      if (!first) sb.append(", ");
      sb.append("startMonth:");
      if (this.startMonth == null) {
        sb.append("null");
      } else {
        sb.append(this.startMonth);
      }
      first = false;
    }
    if (isSetEndMonth()) {
      if (!first) sb.append(", ");
      sb.append("endMonth:");
      if (this.endMonth == null) {
        sb.append("null");
      } else {
        sb.append(this.endMonth);
      }
      first = false;
    }
    if (isSetMinNoOfGuests()) {
      if (!first) sb.append(", ");
      sb.append("minNoOfGuests:");
      sb.append(this.minNoOfGuests);
      first = false;
    }
    if (isSetMaxNoOfGuests()) {
      if (!first) sb.append(", ");
      sb.append("maxNoOfGuests:");
      sb.append(this.maxNoOfGuests);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetLocation()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'location' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TPackagesListRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TPackagesListRequestStandardScheme getScheme() {
      return new TPackagesListRequestStandardScheme();
    }
  }

  private static class TPackagesListRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<TPackagesListRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TPackagesListRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // LOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.location = iprot.readString();
              struct.setLocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // START_MONTH
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.startMonth = com.oyo.search.month.findByValue(iprot.readI32());
              struct.setStartMonthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // END_MONTH
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.endMonth = com.oyo.search.month.findByValue(iprot.readI32());
              struct.setEndMonthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MIN_NO_OF_GUESTS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.minNoOfGuests = iprot.readI32();
              struct.setMinNoOfGuestsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MAX_NO_OF_GUESTS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxNoOfGuests = iprot.readI32();
              struct.setMaxNoOfGuestsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TPackagesListRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.location != null) {
        oprot.writeFieldBegin(LOCATION_FIELD_DESC);
        oprot.writeString(struct.location);
        oprot.writeFieldEnd();
      }
      if (struct.startMonth != null) {
        if (struct.isSetStartMonth()) {
          oprot.writeFieldBegin(START_MONTH_FIELD_DESC);
          oprot.writeI32(struct.startMonth.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.endMonth != null) {
        if (struct.isSetEndMonth()) {
          oprot.writeFieldBegin(END_MONTH_FIELD_DESC);
          oprot.writeI32(struct.endMonth.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetMinNoOfGuests()) {
        oprot.writeFieldBegin(MIN_NO_OF_GUESTS_FIELD_DESC);
        oprot.writeI32(struct.minNoOfGuests);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMaxNoOfGuests()) {
        oprot.writeFieldBegin(MAX_NO_OF_GUESTS_FIELD_DESC);
        oprot.writeI32(struct.maxNoOfGuests);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TPackagesListRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TPackagesListRequestTupleScheme getScheme() {
      return new TPackagesListRequestTupleScheme();
    }
  }

  private static class TPackagesListRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<TPackagesListRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TPackagesListRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.location);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetStartMonth()) {
        optionals.set(0);
      }
      if (struct.isSetEndMonth()) {
        optionals.set(1);
      }
      if (struct.isSetMinNoOfGuests()) {
        optionals.set(2);
      }
      if (struct.isSetMaxNoOfGuests()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetStartMonth()) {
        oprot.writeI32(struct.startMonth.getValue());
      }
      if (struct.isSetEndMonth()) {
        oprot.writeI32(struct.endMonth.getValue());
      }
      if (struct.isSetMinNoOfGuests()) {
        oprot.writeI32(struct.minNoOfGuests);
      }
      if (struct.isSetMaxNoOfGuests()) {
        oprot.writeI32(struct.maxNoOfGuests);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TPackagesListRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.location = iprot.readString();
      struct.setLocationIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.startMonth = com.oyo.search.month.findByValue(iprot.readI32());
        struct.setStartMonthIsSet(true);
      }
      if (incoming.get(1)) {
        struct.endMonth = com.oyo.search.month.findByValue(iprot.readI32());
        struct.setEndMonthIsSet(true);
      }
      if (incoming.get(2)) {
        struct.minNoOfGuests = iprot.readI32();
        struct.setMinNoOfGuestsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.maxNoOfGuests = iprot.readI32();
        struct.setMaxNoOfGuestsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

